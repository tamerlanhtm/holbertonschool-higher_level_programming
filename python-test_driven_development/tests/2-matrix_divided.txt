>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix = [[1, 2], [3, 4]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2], [3, 4]]
>>> div = 'a'
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix = [[1, 2], [3, 4, 5]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2], ['a', 4]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = 'not a list'
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2], [3, 4]]
>>> div = float('inf')
>>> matrix_divided(matrix, div)
[[0.0, 0.0], [0.0, 0.0]]
